shape of df_Benchmark: (30000, 27)
shape of df_precursors: (313, 9)
shape of df_precursor_Mordred: (459, 11)
0.0111
Model loaded:  SchNet
Model loaded:  SchNet
Traceback (most recent call last):
  File "run_benchmark.py", line 358, in <module>
    run_benchmark()
  File "run_benchmark.py", line 304, in run_benchmark
    BO_learned, EA, SUEA, BO_Mord, BO_prop, RAND = initialise_search_algorithm(
  File "run_benchmark.py", line 99, in initialise_search_algorithm
    BO_learned.load_representation_model()
  File "/media/mohammed/Work/STK_search/src/stk_search/Search_algorithm/BayesianOptimisation.py", line 510, in load_representation_model
    representation = Representation_poly_3d.RepresentationPoly3d(
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 77, in __init__
    self.get_bbs_dict(mongo_client, database)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 224, in get_bbs_dict
    for mol in mols:
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/stk/databases/mongo_db/molecule.py", line 487, in get_all
    json = self._molecules.find_one(query)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pymongo/collection.py", line 1495, in find_one
    for result in cursor.limit(-1):
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pymongo/cursor.py", line 1243, in next
    if len(self.__data) or self._refresh():
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pymongo/cursor.py", line 1160, in _refresh
    self.__send_message(q)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pymongo/cursor.py", line 1039, in __send_message
    response = client._run_operation(
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pymongo/_csot.py", line 108, in csot_wrapper
    return func(self, *args, **kwargs)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pymongo/mongo_client.py", line 1431, in _run_operation
    return self._retryable_read(
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pymongo/mongo_client.py", line 1540, in _retryable_read
    return self._retry_internal(
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pymongo/_csot.py", line 108, in csot_wrapper
    return func(self, *args, **kwargs)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pymongo/mongo_client.py", line 1496, in _retry_internal
    return _ClientConnectionRetryable(
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pymongo/mongo_client.py", line 2353, in run
    return self._read() if self._is_read else self._write()
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pymongo/mongo_client.py", line 2491, in _read
    return self._func(self._session, self._server, conn, read_pref)  # type: ignore
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/contextlib.py", line 120, in __exit__
    next(self.gen)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pymongo/mongo_client.py", line 1366, in _conn_from_server
    yield conn, read_preference
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/contextlib.py", line 120, in __exit__
    next(self.gen)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pymongo/mongo_client.py", line 1287, in _checkout
    yield conn
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/contextlib.py", line 120, in __exit__
    next(self.gen)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pymongo/pool.py", line 1810, in checkout
    self.checkin(conn)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pymongo/pool.py", line 2024, in checkin
    self._max_connecting_cond.notify()
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/threading.py", line 354, in notify
    waiters_to_notify = _deque(_islice(all_waiters, n))
KeyboardInterrupt
shape of df_Benchmark: (30000, 27)
shape of df_precursors: (313, 9)
shape of df_precursor_Mordred: (459, 11)
0.0111
Model loaded:  SchNet
Model loaded:  SchNet
4066    QMVLGDMCBALFMF-UHFFFAOYSA-N
Name: InChIKey, dtype: object
representation for SUEA tensor([[ 0.0091, -0.0090,  0.4390,  0.0424,  0.0882,  0.2777,  0.1125, -0.3173,
          0.0355, -0.0064, -0.0243,  0.0217, -0.0151,  0.1380, -0.1676,  0.2561,
         -0.1202, -0.0012, -0.3595,  0.0052, -0.1244,  0.3508,  0.1858,  0.1465,
          0.0817,  0.2685, -0.1327, -0.5109,  0.1849, -0.0365,  0.1133, -0.3997,
          0.0627,  0.0414, -0.0807,  0.2399,  0.4297,  0.0760, -0.0827,  0.2768,
          0.4509,  0.0909,  0.4713,  0.0167,  0.2550, -0.1668, -0.1362, -0.0424,
          0.0197,  0.2902, -0.2658,  0.0942, -0.0272, -0.0195,  0.0597, -0.2449,
         -0.0859,  0.0721, -0.3355,  0.6513, -0.1366,  0.3245, -0.3578,  0.1372,
         -0.0111,  0.3137, -0.2142,  0.0190, -0.1885,  0.2967,  0.2257,  0.2210,
         -0.0167,  0.1679, -0.1653, -0.1322, -0.0031,  0.0622, -0.0552,  0.2611,
          0.0560, -0.0450, -0.3483,  0.0559,  0.2626, -0.0737, -0.0131, -0.0891,
          0.3163,  0.1996, -0.0039,  0.2758, -0.0083, -0.0607,  0.0644, -0.1006,
          0.3553, -0.2731, -0.4644,  0.0743, -0.0185,  0.3619, -0.0962, -0.0474,
          0.2341,  0.1184, -0.4889, -0.3202,  0.2756,  0.1546,  0.2530, -0.0075,
          0.3804, -0.3918,  0.1069,  0.2691,  0.2468, -0.3372,  0.0668, -0.2471,
          0.3906, -0.1735, -0.0369, -0.1905, -0.1608, -0.4652, -0.0236, -0.1753]],
       device='cuda:0')
representation for BO_learned tensor([[ 0.0091, -0.0090,  0.4390,  0.0424,  0.0882,  0.2777,  0.1125, -0.3173,
          0.0355, -0.0064, -0.0243,  0.0217, -0.0151,  0.1380, -0.1676,  0.2561,
         -0.1202, -0.0012, -0.3595,  0.0052, -0.1244,  0.3508,  0.1858,  0.1465,
          0.0817,  0.2685, -0.1327, -0.5109,  0.1849, -0.0365,  0.1133, -0.3997,
          0.0627,  0.0414, -0.0807,  0.2399,  0.4297,  0.0760, -0.0827,  0.2768,
          0.4509,  0.0909,  0.4713,  0.0167,  0.2550, -0.1668, -0.1362, -0.0424,
          0.0197,  0.2902, -0.2658,  0.0942, -0.0272, -0.0195,  0.0597, -0.2449,
         -0.0859,  0.0721, -0.3355,  0.6513, -0.1366,  0.3245, -0.3578,  0.1372,
         -0.0111,  0.3137, -0.2142,  0.0190, -0.1885,  0.2967,  0.2257,  0.2210,
         -0.0167,  0.1679, -0.1653, -0.1322, -0.0031,  0.0622, -0.0552,  0.2611,
          0.0560, -0.0450, -0.3483,  0.0559,  0.2626, -0.0737, -0.0131, -0.0891,
          0.3163,  0.1996, -0.0039,  0.2758, -0.0083, -0.0607,  0.0644, -0.1006,
          0.3553, -0.2731, -0.4644,  0.0743, -0.0185,  0.3619, -0.0962, -0.0474,
          0.2341,  0.1184, -0.4889, -0.3202,  0.2756,  0.1546,  0.2530, -0.0075,
          0.3804, -0.3918,  0.1069,  0.2691,  0.2468, -0.3372,  0.0668, -0.2471,
          0.3906, -0.1735, -0.0369, -0.1905, -0.1608, -0.4652, -0.0236, -0.1753]],
       device='cuda:0')
representation for BO_Mord tensor([[-38488.6602,  -9937.6436,  -5188.0439,    723.1163,  -1617.0156,
            106.8579,  -3014.5134,    717.7443,  -1915.9918,  -2483.9509,
          -6810.8711,   3603.3142,  -8627.6084,   -480.4898,  -2655.7617,
           3575.0425,   3201.8262,  -3552.6460,  -2873.2161,   2345.9651,
         -31123.1152,  -2140.5552,  -3207.7976,  -4082.7051,  -2458.2361,
          -1130.9714,   -570.1791,  -1796.2235,   2330.9106,   3489.1394,
         -38488.6602,  -9937.6436,  -5188.0439,    723.1163,  -1617.0156,
            106.8579,  -3014.5134,    717.7443,  -1915.9918,  -2483.9509,
         -21671.5430,   3527.5005,   -621.4797,  -4241.8184,   -498.6315,
          -2117.1868,   2119.1416,  -6224.4941,   5073.4209,   3742.6807,
          -6810.8711,   3603.3142,  -8627.6084,   -480.4898,  -2655.7617,
           3575.0425,   3201.8262,  -3552.6460,  -2873.2161,   2345.9651]])
representation for BO_prop tensor([[  2.3536,   0.1878,   9.1597, -23.7889, -23.5752,   2.5533,   1.3464,
           7.8711, -52.2853, -52.0810,   1.9820,   1.9325,   9.5819, -40.5536,
         -40.2856,   2.3536,   0.1878,   9.1597, -23.7889, -23.5752,   2.4307,
           0.6920,   7.6890, -38.3320, -38.1163,   2.5533,   1.3464,   7.8711,
         -52.2853, -52.0810]])
Inputs saved.
Traceback (most recent call last):
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/swifter/swifter.py", line 422, in apply
    np.array_equal(sample_df, tmp_df) & (hasattr(tmp_df, "shape")) & (sample_df.shape == tmp_df.shape),
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/torch_geometric/data/data.py", line 559, in __getattr__
    return getattr(self._store, key)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/torch_geometric/data/storage.py", line 96, in __getattr__
    raise AttributeError(
AttributeError: 'GlobalStorage' object has no attribute 'shape'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "run_benchmark.py", line 358, in <module>
    run_benchmark()
  File "run_benchmark.py", line 340, in run_benchmark
    define_and_run_search(
  File "run_benchmark.py", line 225, in define_and_run_search
    s_exp.run_seach()
  File "/media/mohammed/Work/STK_search/src/stk_search/SearchExp.py", line 199, in run_seach
    self.search_algorithm.suggest_element(
  File "/media/mohammed/Work/STK_search/src/stk_search/Search_algorithm/BayesianOptimisation.py", line 151, in suggest_element
    self.optimise_acquisition_function(
  File "/media/mohammed/Work/STK_search/src/stk_search/Search_algorithm/BayesianOptimisation.py", line 255, in optimise_acquisition_function
    xrpr = self.Representation.generate_repr(df_elements)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 147, in generate_repr
    self.add_representations_to_dataset(df_elements, keys_to_compute)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 119, in add_representations_to_dataset
    dataset_poly = self.Build_polymers(elements_copy)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 292, in Build_polymers
    element["polymer"] = element.swifter.progress_bar(False).apply(
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/swifter/swifter.py", line 437, in apply
    return self._pandas_apply(self._obj, func, axis, raw, result_type, *args, **kwds)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/swifter/swifter.py", line 350, in _pandas_apply
    return apply_func(func, axis=axis, raw=raw, result_type=result_type, args=args, **kwds)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/core/frame.py", line 9423, in apply
    return op.apply().__finalize__(self, method="apply")
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/core/apply.py", line 678, in apply
    return self.apply_standard()
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/core/apply.py", line 798, in apply_standard
    results, res_index = self.apply_series_generator()
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/core/apply.py", line 814, in apply_series_generator
    results[i] = self.f(v)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 293, in <lambda>
    lambda x: gen_mol(x), axis=1
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 265, in gen_mol
    bb = bbs_dict[fragment]
KeyError: 'PTRYVXYLNANOHT-WTKPLQERSA-N'
Traceback (most recent call last):
  File "run_benchmark.py", line 358, in <module>
    run_benchmark()
  File "run_benchmark.py", line 287, in run_benchmark
    get_dataframes(
  File "run_benchmark.py", line 61, in get_dataframes
    df_precursor_Mordred = pd.read_pickle(df_precursor)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/io/pickle.py", line 179, in read_pickle
    with get_handle(
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/io/common.py", line 716, in get_handle
    ioargs = _get_filepath_or_buffer(
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/io/common.py", line 456, in _get_filepath_or_buffer
    raise ValueError(msg)
ValueError: Invalid file path or buffer object type: <class 'pandas.core.frame.DataFrame'>
shape of df_Benchmark: (30000, 27)
shape of df_precursors: (313, 9)
shape of df_precursor_Mordred: (459, 11)
0.0111
Model loaded:  SchNet
Model loaded:  SchNet
18769    QQOFSXGJGOVAGK-RDTMWTOZSA-N
Name: InChIKey, dtype: object
representation for SUEA tensor([[ 0.1018,  0.1658,  0.4293,  0.0439,  0.0495,  0.2243, -0.0486, -0.2125,
          0.1125, -0.0064, -0.1641, -0.1008, -0.0696,  0.1022, -0.1884,  0.1916,
         -0.0647, -0.0005, -0.2997, -0.0195, -0.0129,  0.1979,  0.2467,  0.1812,
          0.0876,  0.1195, -0.1586, -0.3247,  0.0579, -0.0914,  0.0945, -0.3088,
          0.0835,  0.0304, -0.1403,  0.1795,  0.1965,  0.0989, -0.1671,  0.0074,
          0.3412,  0.0570,  0.3118,  0.0104,  0.2987, -0.1014, -0.0834, -0.1101,
          0.0633,  0.2393, -0.1958, -0.0586, -0.0782, -0.0112,  0.0148, -0.2025,
         -0.1583, -0.0811, -0.1725,  0.3825, -0.1629,  0.3233, -0.2178,  0.0953,
         -0.0360,  0.2753, -0.1622, -0.0060, -0.1426,  0.2128,  0.2540,  0.0214,
          0.0016,  0.1455, -0.1373, -0.1462,  0.0201, -0.0318,  0.0046,  0.1772,
         -0.0037, -0.0214, -0.3164,  0.0390,  0.2680, -0.0110,  0.0680,  0.0191,
          0.1923,  0.1396, -0.0044,  0.2224, -0.0600,  0.0055,  0.0470, -0.0126,
          0.2501, -0.2175, -0.3555, -0.0234, -0.1282,  0.2461, -0.0491, -0.0024,
          0.1226,  0.0938, -0.3393, -0.2625,  0.2230,  0.0875,  0.1743, -0.0366,
          0.2407, -0.1109, -0.0322,  0.2302,  0.1366, -0.2747,  0.0043, -0.1756,
          0.2960, -0.2240,  0.0206, -0.2455, -0.0722, -0.3194, -0.0347, -0.2267]],
       device='cuda:0')
representation for BO_learned tensor([[ 0.1018,  0.1658,  0.4293,  0.0439,  0.0495,  0.2243, -0.0486, -0.2125,
          0.1125, -0.0064, -0.1641, -0.1008, -0.0696,  0.1022, -0.1884,  0.1916,
         -0.0647, -0.0005, -0.2997, -0.0195, -0.0129,  0.1979,  0.2467,  0.1812,
          0.0876,  0.1195, -0.1586, -0.3247,  0.0579, -0.0914,  0.0945, -0.3088,
          0.0835,  0.0304, -0.1403,  0.1795,  0.1965,  0.0989, -0.1671,  0.0074,
          0.3412,  0.0570,  0.3118,  0.0104,  0.2987, -0.1014, -0.0834, -0.1101,
          0.0633,  0.2393, -0.1958, -0.0586, -0.0782, -0.0112,  0.0148, -0.2025,
         -0.1583, -0.0811, -0.1725,  0.3825, -0.1629,  0.3233, -0.2178,  0.0953,
         -0.0360,  0.2753, -0.1622, -0.0060, -0.1426,  0.2128,  0.2540,  0.0214,
          0.0016,  0.1455, -0.1373, -0.1462,  0.0201, -0.0318,  0.0046,  0.1772,
         -0.0037, -0.0214, -0.3164,  0.0390,  0.2680, -0.0110,  0.0680,  0.0191,
          0.1923,  0.1396, -0.0044,  0.2224, -0.0600,  0.0055,  0.0470, -0.0126,
          0.2501, -0.2175, -0.3555, -0.0234, -0.1282,  0.2461, -0.0491, -0.0024,
          0.1226,  0.0938, -0.3393, -0.2625,  0.2230,  0.0875,  0.1743, -0.0366,
          0.2407, -0.1109, -0.0322,  0.2302,  0.1366, -0.2747,  0.0043, -0.1756,
          0.2960, -0.2240,  0.0206, -0.2455, -0.0722, -0.3194, -0.0347, -0.2267]],
       device='cuda:0')
representation for BO_Mord tensor([[   906.8983,   2499.7791,   -167.2441,  -6232.1592,  -3123.4451,
          -2772.2217,  -2072.7839,   2591.2732,   2339.5815,   1142.2018,
          -8164.2114,   3193.4834,   7905.9253,   2972.0515,   -396.3985,
            532.0077,   -620.2928,    655.4803,  -2594.1641,   2338.7241,
         -32938.9180,  -7897.4023,   4651.1260,   2462.7566,   -920.6180,
            866.9160,   3504.2178,    628.0928,    488.5007,    766.2521,
         -36162.3594,  -8159.3745,  -5011.1323,     86.7727,  -1551.0233,
           -745.2612,  -2483.4570,    307.2812,   -274.5852,   -896.0638,
           9512.8330,   -682.0142,   2459.6204,  -7500.6587,   1601.2213,
           -857.2468,  -1183.8578,   4197.9990,   1121.9843,  -4462.4263,
          -9329.6924,   3522.7012,   6624.2368,    833.9935,  -3015.1074,
           1141.3075,  -2723.5269,  -1046.1039,   1698.4106,  -2836.4595]])
representation for BO_prop tensor([[  1.4916,   0.6617,   8.4300, -55.6465, -55.3636,   1.6520,   0.1123,
           8.9612, -52.3373, -52.0527,   2.8031,   0.5985,   8.3280, -28.7120,
         -28.5013,   3.5506,   0.0946,   9.1445, -27.4431, -27.2611,   2.2347,
           0.4435,   7.7214, -58.4252, -58.1791,   1.8995,   0.1531,   8.6877,
         -49.2012, -48.9271]])
Inputs saved.
Traceback (most recent call last):
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/swifter/swifter.py", line 422, in apply
    np.array_equal(sample_df, tmp_df) & (hasattr(tmp_df, "shape")) & (sample_df.shape == tmp_df.shape),
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/torch_geometric/data/data.py", line 559, in __getattr__
    return getattr(self._store, key)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/torch_geometric/data/storage.py", line 96, in __getattr__
    raise AttributeError(
AttributeError: 'GlobalStorage' object has no attribute 'shape'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "run_benchmark.py", line 358, in <module>
    run_benchmark()
  File "run_benchmark.py", line 340, in run_benchmark
    define_and_run_search(
  File "run_benchmark.py", line 225, in define_and_run_search
    s_exp.run_seach()
  File "/media/mohammed/Work/STK_search/src/stk_search/SearchExp.py", line 199, in run_seach
    self.search_algorithm.suggest_element(
  File "/media/mohammed/Work/STK_search/src/stk_search/Search_algorithm/BayesianOptimisation.py", line 151, in suggest_element
    self.optimise_acquisition_function(
  File "/media/mohammed/Work/STK_search/src/stk_search/Search_algorithm/BayesianOptimisation.py", line 255, in optimise_acquisition_function
    xrpr = self.Representation.generate_repr(df_elements)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 147, in generate_repr
    self.add_representations_to_dataset(df_elements, keys_to_compute)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 119, in add_representations_to_dataset
    dataset_poly = self.Build_polymers(elements_copy)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 292, in Build_polymers
    element["polymer"] = element.swifter.progress_bar(False).apply(
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/swifter/swifter.py", line 437, in apply
    return self._pandas_apply(self._obj, func, axis, raw, result_type, *args, **kwds)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/swifter/swifter.py", line 350, in _pandas_apply
    return apply_func(func, axis=axis, raw=raw, result_type=result_type, args=args, **kwds)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/core/frame.py", line 9423, in apply
    return op.apply().__finalize__(self, method="apply")
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/core/apply.py", line 678, in apply
    return self.apply_standard()
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/core/apply.py", line 798, in apply_standard
    results, res_index = self.apply_series_generator()
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/core/apply.py", line 814, in apply_series_generator
    results[i] = self.f(v)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 293, in <lambda>
    lambda x: gen_mol(x), axis=1
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 265, in gen_mol
    bb = bbs_dict[fragment]
KeyError: 'PTRYVXYLNANOHT-WTKPLQERSA-N'
shape of df_Benchmark: (30000, 27)
shape of df_precursors: (313, 9)
shape of df_precursor_Mordred: (459, 11)
0.0111
Model loaded:  SchNet
Model loaded:  SchNet
9673    MMDFRGYNIGWHLE-UHFFFAOYSA-N
Name: InChIKey, dtype: object
representation for SUEA tensor([[ 0.1399,  0.2386,  0.4285,  0.0412,  0.0434,  0.2498, -0.0928, -0.1876,
          0.1595,  0.0329, -0.1687, -0.1291, -0.0973,  0.1246, -0.2084,  0.2091,
         -0.1280, -0.0256, -0.3287, -0.0089, -0.0329,  0.2667,  0.2431,  0.2056,
          0.0907,  0.2020, -0.1291, -0.3777,  0.0721, -0.1113,  0.0672, -0.3402,
          0.0822,  0.0491, -0.1499,  0.2273,  0.2333,  0.1387, -0.1768,  0.0623,
          0.3487,  0.0754,  0.4088, -0.0055,  0.3316, -0.1298, -0.0786, -0.1469,
          0.0278,  0.3023, -0.2028, -0.0487, -0.0416, -0.0015,  0.0560, -0.2246,
         -0.2125, -0.0899, -0.2182,  0.4313, -0.1286,  0.3144, -0.2344,  0.0936,
         -0.0504,  0.3554, -0.1736, -0.0069, -0.1936,  0.2585,  0.2509,  0.0463,
         -0.0429,  0.1210, -0.1871, -0.1767, -0.0108, -0.0727, -0.0185,  0.1746,
         -0.0189, -0.0160, -0.3550,  0.0585,  0.2771,  0.0013,  0.0537, -0.0083,
          0.2312,  0.1509, -0.0300,  0.2716, -0.0219, -0.0067,  0.0951, -0.0116,
          0.2749, -0.2669, -0.3644, -0.0685, -0.1368,  0.2385, -0.0440, -0.0123,
          0.1635,  0.1485, -0.3771, -0.3214,  0.2383,  0.1247,  0.2175, -0.0860,
          0.3230, -0.1549, -0.0080,  0.2272,  0.1657, -0.2695, -0.0279, -0.2020,
          0.3137, -0.2290,  0.0265, -0.2351, -0.1240, -0.2995, -0.0074, -0.2162]],
       device='cuda:0')
representation for BO_learned tensor([[ 0.1399,  0.2386,  0.4285,  0.0412,  0.0434,  0.2498, -0.0928, -0.1876,
          0.1595,  0.0329, -0.1687, -0.1291, -0.0973,  0.1246, -0.2084,  0.2091,
         -0.1280, -0.0256, -0.3287, -0.0089, -0.0329,  0.2667,  0.2431,  0.2056,
          0.0907,  0.2020, -0.1291, -0.3777,  0.0721, -0.1113,  0.0672, -0.3402,
          0.0822,  0.0491, -0.1499,  0.2273,  0.2333,  0.1387, -0.1768,  0.0623,
          0.3487,  0.0754,  0.4088, -0.0055,  0.3316, -0.1298, -0.0786, -0.1469,
          0.0278,  0.3023, -0.2028, -0.0487, -0.0416, -0.0015,  0.0560, -0.2246,
         -0.2125, -0.0899, -0.2182,  0.4313, -0.1286,  0.3144, -0.2344,  0.0936,
         -0.0504,  0.3554, -0.1736, -0.0069, -0.1936,  0.2585,  0.2509,  0.0463,
         -0.0429,  0.1210, -0.1871, -0.1767, -0.0108, -0.0727, -0.0185,  0.1746,
         -0.0189, -0.0160, -0.3550,  0.0585,  0.2771,  0.0013,  0.0537, -0.0083,
          0.2312,  0.1509, -0.0300,  0.2716, -0.0219, -0.0067,  0.0951, -0.0116,
          0.2749, -0.2669, -0.3644, -0.0685, -0.1368,  0.2385, -0.0440, -0.0123,
          0.1635,  0.1485, -0.3771, -0.3214,  0.2383,  0.1247,  0.2175, -0.0860,
          0.3230, -0.1549, -0.0080,  0.2272,  0.1657, -0.2695, -0.0279, -0.2020,
          0.3137, -0.2290,  0.0265, -0.2351, -0.1240, -0.2995, -0.0074, -0.2162]],
       device='cuda:0')
representation for BO_Mord tensor([[ -1457.9858,   6943.8711,  -3729.4377,  -3719.0061,   -219.5863,
          -1023.8017,  -2804.5676,  -2285.8745,  -3311.9844,   -309.2179,
           9512.8330,   -682.0142,   2459.6204,  -7500.6587,   1601.2213,
           -857.2468,  -1183.8578,   4197.9990,   1121.9843,  -4462.4263,
          -1457.9858,   6943.8711,  -3729.4377,  -3719.0061,   -219.5863,
          -1023.8017,  -2804.5676,  -2285.8745,  -3311.9844,   -309.2179,
         -16248.5967,  -7754.2490,  -2047.6600,   -776.2837,   6748.9985,
           1855.9971,    959.1137,  -3735.7644,  -1737.6494,   -176.3120,
         -37856.7617,  -9735.9834,  -5324.5493,    948.4611,  -1495.9375,
           -374.1230,  -3159.2773,    779.5140,  -1530.4237,  -2298.8965,
          -1457.9858,   6943.8711,  -3729.4377,  -3719.0061,   -219.5863,
          -1023.8017,  -2804.5676,  -2285.8745,  -3311.9844,   -309.2179]])
representation for BO_prop tensor([[ 1.9760e+00,  8.7168e-02,  8.6258e+00, -5.5319e+01, -5.5053e+01,
          2.2347e+00,  4.4353e-01,  7.7214e+00, -5.8425e+01, -5.8179e+01,
          1.9760e+00,  8.7168e-02,  8.6258e+00, -5.5319e+01, -5.5053e+01,
          1.9997e+00,  9.8667e-01,  8.2366e+00, -4.3818e+01, -4.3589e+01,
          3.2593e+00,  5.5661e-02,  9.1308e+00, -2.3499e+01, -2.3310e+01,
          1.9760e+00,  8.7168e-02,  8.6258e+00, -5.5319e+01, -5.5053e+01]])
Inputs saved.
Traceback (most recent call last):
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/swifter/swifter.py", line 422, in apply
    np.array_equal(sample_df, tmp_df) & (hasattr(tmp_df, "shape")) & (sample_df.shape == tmp_df.shape),
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/torch_geometric/data/data.py", line 559, in __getattr__
    return getattr(self._store, key)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/torch_geometric/data/storage.py", line 96, in __getattr__
    raise AttributeError(
AttributeError: 'GlobalStorage' object has no attribute 'shape'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "run_benchmark.py", line 358, in <module>
    run_benchmark()
  File "run_benchmark.py", line 340, in run_benchmark
    define_and_run_search(
  File "run_benchmark.py", line 225, in define_and_run_search
    s_exp.run_seach()
  File "/media/mohammed/Work/STK_search/src/stk_search/SearchExp.py", line 199, in run_seach
    self.search_algorithm.suggest_element(
  File "/media/mohammed/Work/STK_search/src/stk_search/Search_algorithm/BayesianOptimisation.py", line 151, in suggest_element
    self.optimise_acquisition_function(
  File "/media/mohammed/Work/STK_search/src/stk_search/Search_algorithm/BayesianOptimisation.py", line 230, in optimise_acquisition_function
    xrpr = self.Representation.generate_repr(df_elements)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 147, in generate_repr
    self.add_representations_to_dataset(df_elements, keys_to_compute)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 119, in add_representations_to_dataset
    dataset_poly = self.Build_polymers(elements_copy)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 292, in Build_polymers
    element["polymer"] = element.swifter.progress_bar(False).apply(
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/swifter/swifter.py", line 437, in apply
    return self._pandas_apply(self._obj, func, axis, raw, result_type, *args, **kwds)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/swifter/swifter.py", line 350, in _pandas_apply
    return apply_func(func, axis=axis, raw=raw, result_type=result_type, args=args, **kwds)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/core/frame.py", line 9423, in apply
    return op.apply().__finalize__(self, method="apply")
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/core/apply.py", line 678, in apply
    return self.apply_standard()
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/core/apply.py", line 798, in apply_standard
    results, res_index = self.apply_series_generator()
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/core/apply.py", line 814, in apply_series_generator
    results[i] = self.f(v)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 293, in <lambda>
    lambda x: gen_mol(x), axis=1
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 265, in gen_mol
    bb = bbs_dict[fragment]
KeyError: 'PTRYVXYLNANOHT-WTKPLQERSA-N'
shape of df_Benchmark: (30000, 27)
shape of df_precursors: (313, 9)
shape of df_precursor_Mordred: (459, 11)
shape of SearchSpace: (246, 9)
0.0111
Model loaded:  SchNet
Model loaded:  SchNet
13848    OSFZTCVQLNTQPM-QEMDGBMQSA-N
Name: InChIKey, dtype: object
representation for SUEA tensor([[ 0.1393,  0.2585,  0.4839,  0.0609,  0.0660,  0.3297, -0.1377, -0.2492,
          0.1654,  0.0680, -0.1929, -0.1910, -0.1071,  0.1172, -0.2749,  0.2677,
         -0.2043,  0.0073, -0.4294, -0.0320, -0.0826,  0.2490,  0.3062,  0.2260,
          0.1422,  0.2436, -0.2068, -0.4443,  0.0506, -0.1632,  0.0837, -0.4780,
          0.0949,  0.1234, -0.1641,  0.2307,  0.2898,  0.1659, -0.1977,  0.0426,
          0.4499,  0.0772,  0.4958, -0.0572,  0.3904, -0.1949, -0.1172, -0.1487,
          0.0550,  0.3537, -0.2307, -0.0534, -0.0685, -0.0148,  0.0405, -0.2898,
         -0.2691, -0.1446, -0.2822,  0.5059, -0.2220,  0.4194, -0.3361,  0.0973,
         -0.0302,  0.3954, -0.2311,  0.0294, -0.2529,  0.3464,  0.3540,  0.0580,
         -0.0227,  0.2220, -0.2243, -0.2129,  0.0150, -0.0753, -0.0185,  0.1924,
         -0.0020, -0.0298, -0.4173,  0.0744,  0.3697, -0.0168,  0.0656,  0.0149,
          0.2943,  0.1539,  0.0063,  0.3539, -0.0055, -0.0401,  0.1190, -0.0197,
          0.3103, -0.2866, -0.4444, -0.0630, -0.1758,  0.3463, -0.1091, -0.0039,
          0.1877,  0.1803, -0.4368, -0.3759,  0.2861,  0.1568,  0.2890, -0.1201,
          0.3987, -0.1864, -0.0179,  0.3381,  0.1837, -0.3213, -0.0314, -0.2688,
          0.3881, -0.3084,  0.0335, -0.2887, -0.1444, -0.4091, -0.0018, -0.3088]],
       device='cuda:0')
representation for BO_learned tensor([[ 0.1393,  0.2585,  0.4839,  0.0609,  0.0660,  0.3297, -0.1377, -0.2492,
          0.1654,  0.0680, -0.1929, -0.1910, -0.1071,  0.1172, -0.2749,  0.2677,
         -0.2043,  0.0073, -0.4294, -0.0320, -0.0826,  0.2490,  0.3062,  0.2260,
          0.1422,  0.2436, -0.2068, -0.4443,  0.0506, -0.1632,  0.0837, -0.4780,
          0.0949,  0.1234, -0.1641,  0.2307,  0.2898,  0.1659, -0.1977,  0.0426,
          0.4499,  0.0772,  0.4958, -0.0572,  0.3904, -0.1949, -0.1172, -0.1487,
          0.0550,  0.3537, -0.2307, -0.0534, -0.0685, -0.0148,  0.0405, -0.2898,
         -0.2691, -0.1446, -0.2822,  0.5059, -0.2220,  0.4194, -0.3361,  0.0973,
         -0.0302,  0.3954, -0.2311,  0.0294, -0.2529,  0.3464,  0.3540,  0.0580,
         -0.0227,  0.2220, -0.2243, -0.2129,  0.0150, -0.0753, -0.0185,  0.1924,
         -0.0020, -0.0298, -0.4173,  0.0744,  0.3697, -0.0168,  0.0656,  0.0149,
          0.2943,  0.1539,  0.0063,  0.3539, -0.0055, -0.0401,  0.1190, -0.0197,
          0.3103, -0.2866, -0.4444, -0.0630, -0.1758,  0.3463, -0.1091, -0.0039,
          0.1877,  0.1803, -0.4368, -0.3759,  0.2861,  0.1568,  0.2890, -0.1201,
          0.3987, -0.1864, -0.0179,  0.3381,  0.1837, -0.3213, -0.0314, -0.2688,
          0.3881, -0.3084,  0.0335, -0.2887, -0.1444, -0.4091, -0.0018, -0.3088]],
       device='cuda:0')
representation for BO_Mord tensor([[   906.8983,   2499.7791,   -167.2441,  -6232.1592,  -3123.4451,
          -2772.2217,  -2072.7839,   2591.2732,   2339.5815,   1142.2018,
          -8164.2114,   3193.4834,   7905.9253,   2972.0515,   -396.3985,
            532.0077,   -620.2928,    655.4803,  -2594.1641,   2338.7241,
         -29930.7031,   -326.3814,  -2425.2385,  -5501.9854,  -2835.5020,
          -1240.0988,   -238.7752,  -1877.4014,   2040.5587,   5288.1128,
         -36162.3594,  -8159.3745,  -5011.1323,     86.7727,  -1551.0233,
           -745.2612,  -2483.4570,    307.2812,   -274.5852,   -896.0638,
           9512.8330,   -682.0142,   2459.6204,  -7500.6587,   1601.2213,
           -857.2468,  -1183.8578,   4197.9990,   1121.9843,  -4462.4263,
           6418.3052,   2450.9263,  -1225.4985,  -3891.5000,    639.4960,
          -2486.2043,  -3685.3279,    204.7137,    230.0910,    977.0470]])
representation for BO_prop tensor([[  1.4916,   0.6617,   8.4300, -55.6465, -55.3636,   1.6520,   0.1123,
           8.9612, -52.3373, -52.0527,   1.9270,   1.9248,   9.0553, -39.8144,
         -39.5518,   3.5506,   0.0946,   9.1445, -27.4431, -27.2611,   2.2347,
           0.4435,   7.7214, -58.4252, -58.1791,   1.7735,   0.1986,   8.3959,
         -57.7021, -57.4261]])
Inputs saved.
Traceback (most recent call last):
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/swifter/swifter.py", line 422, in apply
    np.array_equal(sample_df, tmp_df) & (hasattr(tmp_df, "shape")) & (sample_df.shape == tmp_df.shape),
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/torch_geometric/data/data.py", line 559, in __getattr__
    return getattr(self._store, key)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/torch_geometric/data/storage.py", line 96, in __getattr__
    raise AttributeError(
AttributeError: 'GlobalStorage' object has no attribute 'shape'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "run_benchmark.py", line 359, in <module>
    run_benchmark()
  File "run_benchmark.py", line 341, in run_benchmark
    define_and_run_search(
  File "run_benchmark.py", line 226, in define_and_run_search
    s_exp.run_seach()
  File "/media/mohammed/Work/STK_search/src/stk_search/SearchExp.py", line 199, in run_seach
    self.search_algorithm.suggest_element(
  File "/media/mohammed/Work/STK_search/src/stk_search/Search_algorithm/BayesianOptimisation.py", line 151, in suggest_element
    self.optimise_acquisition_function(
  File "/media/mohammed/Work/STK_search/src/stk_search/Search_algorithm/BayesianOptimisation.py", line 230, in optimise_acquisition_function
    xrpr = self.Representation.generate_repr(df_elements)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 147, in generate_repr
    self.add_representations_to_dataset(df_elements, keys_to_compute)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 119, in add_representations_to_dataset
    dataset_poly = self.Build_polymers(elements_copy)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 292, in Build_polymers
    element["polymer"] = element.swifter.progress_bar(False).apply(
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/swifter/swifter.py", line 437, in apply
    return self._pandas_apply(self._obj, func, axis, raw, result_type, *args, **kwds)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/swifter/swifter.py", line 350, in _pandas_apply
    return apply_func(func, axis=axis, raw=raw, result_type=result_type, args=args, **kwds)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/core/frame.py", line 9423, in apply
    return op.apply().__finalize__(self, method="apply")
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/core/apply.py", line 678, in apply
    return self.apply_standard()
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/core/apply.py", line 798, in apply_standard
    results, res_index = self.apply_series_generator()
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/pandas/core/apply.py", line 814, in apply_series_generator
    results[i] = self.f(v)
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 293, in <lambda>
    lambda x: gen_mol(x), axis=1
  File "/media/mohammed/Work/STK_search/src/stk_search/Representation/Representation_poly_3d.py", line 265, in gen_mol
    bb = bbs_dict[fragment]
KeyError: 'PTRYVXYLNANOHT-WTKPLQERSA-N'
number of elements in the benchmark in the search space: (20653, 27)
shape of df_Benchmark: (30000, 27)
shape of df_precursors: (307, 9)
shape of df_precursor_Mordred: (453, 11)
shape of SearchSpace: (245, 9)
 Inchikey 'PTRYVXYLNANOHT-WTKPLQERSA-N' in df_precursor:  0
0.0111
Model loaded:  SchNet
Model loaded:  SchNet
29465    QSRABPYOQKSTIQ-MHDZXYMMSA-N
Name: InChIKey, dtype: object
representation for SUEA tensor([[ 0.1072,  0.2746,  0.5033,  0.0316,  0.0734,  0.2959, -0.1187, -0.2559,
          0.1822,  0.0534, -0.1918, -0.2024, -0.1206,  0.1348, -0.2662,  0.2359,
         -0.2132, -0.0087, -0.4387, -0.0764, -0.0329,  0.2522,  0.3064,  0.2287,
          0.1267,  0.2465, -0.1857, -0.4660,  0.0809, -0.1731,  0.1154, -0.4913,
          0.0814,  0.1374, -0.1493,  0.2394,  0.2422,  0.1668, -0.1926,  0.0751,
          0.4281,  0.0703,  0.4513, -0.0449,  0.4264, -0.1865, -0.0841, -0.1536,
          0.0450,  0.3118, -0.2081, -0.0646, -0.0854, -0.0259,  0.0415, -0.2519,
         -0.2518, -0.1005, -0.2694,  0.5119, -0.1891,  0.3669, -0.3479,  0.1031,
         -0.0345,  0.3803, -0.2087,  0.0541, -0.2330,  0.3342,  0.3214,  0.0173,
         -0.0422,  0.2108, -0.2189, -0.2067,  0.0212, -0.0641, -0.0145,  0.2040,
         -0.0304, -0.0008, -0.4537,  0.0574,  0.3395, -0.0287,  0.1093, -0.0390,
          0.2716,  0.1916, -0.0361,  0.3175, -0.0109, -0.0425,  0.1669, -0.0286,
          0.3007, -0.3232, -0.4068, -0.0216, -0.1673,  0.3012, -0.0623,  0.0203,
          0.1686,  0.1666, -0.4487, -0.3742,  0.2653,  0.1305,  0.2390, -0.0760,
          0.3857, -0.2084,  0.0104,  0.2892,  0.2263, -0.3123, -0.0268, -0.3094,
          0.3532, -0.3000,  0.0489, -0.2471, -0.1088, -0.3846, -0.0069, -0.2804]],
       device='cuda:0')
representation for BO_learned tensor([[ 0.1072,  0.2746,  0.5033,  0.0316,  0.0734,  0.2959, -0.1187, -0.2559,
          0.1822,  0.0534, -0.1918, -0.2024, -0.1206,  0.1348, -0.2662,  0.2359,
         -0.2132, -0.0087, -0.4387, -0.0764, -0.0329,  0.2522,  0.3064,  0.2287,
          0.1267,  0.2465, -0.1857, -0.4660,  0.0809, -0.1731,  0.1154, -0.4913,
          0.0814,  0.1374, -0.1493,  0.2394,  0.2422,  0.1668, -0.1926,  0.0751,
          0.4281,  0.0703,  0.4513, -0.0449,  0.4264, -0.1865, -0.0841, -0.1536,
          0.0450,  0.3118, -0.2081, -0.0646, -0.0854, -0.0259,  0.0415, -0.2519,
         -0.2518, -0.1005, -0.2694,  0.5119, -0.1891,  0.3669, -0.3479,  0.1031,
         -0.0345,  0.3803, -0.2087,  0.0541, -0.2330,  0.3342,  0.3214,  0.0173,
         -0.0422,  0.2108, -0.2189, -0.2067,  0.0212, -0.0641, -0.0145,  0.2040,
         -0.0304, -0.0008, -0.4537,  0.0574,  0.3395, -0.0287,  0.1093, -0.0390,
          0.2716,  0.1916, -0.0361,  0.3175, -0.0109, -0.0425,  0.1669, -0.0286,
          0.3007, -0.3232, -0.4068, -0.0216, -0.1673,  0.3012, -0.0623,  0.0203,
          0.1686,  0.1666, -0.4487, -0.3742,  0.2653,  0.1305,  0.2390, -0.0760,
          0.3857, -0.2084,  0.0104,  0.2892,  0.2263, -0.3123, -0.0268, -0.3094,
          0.3532, -0.3000,  0.0489, -0.2471, -0.1088, -0.3846, -0.0069, -0.2804]],
       device='cuda:0')
representation for BO_Mord tensor([[ -1566.6057,   -912.3898,   3763.0312,   1134.0973,   6544.0068,
           -213.4432,  -1528.5547,   -803.2829,  -2564.2349,    436.3316,
         -37260.4453,  -9350.6162,  -5629.5498,   -666.8843,  -1412.7915,
           -954.0522,  -3395.2961,   1027.0511,  -1223.1141,  -1993.7450,
           -479.0059,   3995.0134,  -3867.9158,   -395.3226,  -1474.3158,
           -867.8896,  -5736.1533,   2059.8909,   2345.2598,  -1161.2664,
         -36254.4922,  -8019.4180,  -4732.7764,  -1526.4525,  -1563.3037,
           -746.8116,  -2459.2859,    318.0357,   -314.5128,   -873.0835,
           9437.1494,   -660.3269,   4829.5483,  -6240.6675,   1674.9329,
           -856.8413,  -1261.1368,   4219.6602,    924.7062,  -4439.3433,
           7338.1006,    561.5163,   4348.1289,    497.6093,   5965.0820,
           -627.7086,  -2907.6289,   -317.8840,  -1995.9403,   1552.6212]])
representation for BO_prop tensor([[  1.8860,   0.0741,   8.5216, -55.3374, -55.0651,   3.6981,   0.0604,
           8.9095, -23.2090, -23.0400,   2.1525,   1.4050,   8.5697, -54.1075,
         -53.8475,   3.5506,   0.0946,   9.1445, -27.4431, -27.2611,   2.2347,
           0.4435,   7.7214, -58.4252, -58.1791,   1.8699,   0.1312,   8.5161,
         -57.7001, -57.4238]])
Inputs saved.
Traceback (most recent call last):
  File "run_benchmark.py", line 374, in <module>
    run_benchmark()
  File "run_benchmark.py", line 357, in run_benchmark
    define_and_run_search(
  File "run_benchmark.py", line 242, in define_and_run_search
    s_exp.run_seach()
  File "/media/mohammed/Work/STK_search/src/stk_search/SearchExp.py", line 199, in run_seach
    self.search_algorithm.suggest_element(
  File "/media/mohammed/Work/STK_search/src/stk_search/Search_algorithm/BayesianOptimisation.py", line 151, in suggest_element
    self.optimise_acquisition_function(
  File "/media/mohammed/Work/STK_search/src/stk_search/Search_algorithm/BayesianOptimisation.py", line 258, in optimise_acquisition_function
    acquisition_values = self.get_acquisition_values(
  File "/media/mohammed/Work/STK_search/src/stk_search/Search_algorithm/BayesianOptimisation.py", line 410, in get_acquisition_values
    acquisition_values = acquisition_function.forward(
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/botorch/utils/transforms.py", line 287, in decorated
    output = method(acqf, X, *args, **kwargs)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/botorch/acquisition/analytic.py", line 362, in forward
    mean, sigma = self._mean_and_sigma(X)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/botorch/acquisition/analytic.py", line 111, in _mean_and_sigma
    posterior = self.model.posterior(
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/botorch/models/gpytorch.py", line 379, in posterior
    mvn = self(X)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/gpytorch/models/exact_gp.py", line 332, in __call__
    ) = self.prediction_strategy.exact_prediction(full_mean, full_covar)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/gpytorch/models/exact_prediction_strategies.py", line 264, in exact_prediction
    test_covar = joint_covar[..., self.num_train :, :].to_dense()
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/gpytorch/utils/memoize.py", line 59, in g
    return _add_to_cache(self, cache_name, method(self, *args, **kwargs), *args, kwargs_pkl=kwargs_pkl)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/gpytorch/lazy/lazy_evaluated_kernel_tensor.py", line 410, in to_dense
    return self.evaluate_kernel().to_dense()
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/gpytorch/utils/memoize.py", line 59, in g
    return _add_to_cache(self, cache_name, method(self, *args, **kwargs), *args, kwargs_pkl=kwargs_pkl)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/gpytorch/lazy/lazy_evaluated_kernel_tensor.py", line 25, in wrapped
    output = method(self, *args, **kwargs)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/gpytorch/lazy/lazy_evaluated_kernel_tensor.py", line 355, in evaluate_kernel
    res = self.kernel(
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/gpytorch/kernels/kernel.py", line 524, in __call__
    super(Kernel, self).__call__(x1_, x2_, last_dim_is_batch=last_dim_is_batch, **params)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/gpytorch/module.py", line 31, in __call__
    outputs = self.forward(*inputs, **kwargs)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/gpytorch/kernels/scale_kernel.py", line 109, in forward
    orig_output = self.base_kernel.forward(x1, x2, diag=diag, last_dim_is_batch=last_dim_is_batch, **params)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/gpytorch/kernels/rbf_kernel.py", line 79, in forward
    return postprocess_rbf(self.covar_dist(x1_, x2_, square_dist=True, diag=diag, **params))
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/gpytorch/kernels/kernel.py", line 351, in covar_dist
    return dist_func(x1, x2, x1_eq_x2)
  File "/media/mohammed/Work/anaconda3/envs/stk_search/lib/python3.8/site-packages/gpytorch/kernels/kernel.py", line 38, in sq_dist
    x2_norm = x2.pow(2).sum(dim=-1, keepdim=True)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 860.00 MiB. GPU 
